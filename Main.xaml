<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:Annotation.AnnotationText="UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="707,2384" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="717,2319" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="errorCodes">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">new string[] {}</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:String[]" Name="errorCodesCx">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">new string[] {}</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:String[]" Name="errorCodesBx">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">new string[] {}</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:String[]" Name="errorCodesAx">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">new string[] {}</CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Separate a collection of error codes using Switch&#xA;&#xA;Considering a collection of error codes stored in an Array of Strings, separate them based on their type of error code (&quot;Ax&quot;, &quot;Bx&quot; or “Cx”) and store them in 3 different arrays. &#xA;&#xA;Note: The initial Array should contain the following values: &#xA;{&quot;Ax001&quot;, &quot;Ax002&quot;, &quot;Ax003&quot;, &quot;Ax004&quot;, &quot;Ax005&quot;, &quot;Bx001&quot;, &quot;Bx002&quot;, &quot;Bx003&quot;, &quot;Cx001&quot;, &quot;Cx002&quot;, &quot;Cx003&quot;, &quot;Cx004&quot;, &quot;Dx314&quot;, &quot;BadError&quot;}&#xA;&#xA;//variables - note they are instantiated&#xA;errorCodes - Array of &lt;String&gt;, populated&#xA;axCodes, bxCodes, cxCode" DisplayName="Sequence Initialization" sap:VirtualizedContainerService.HintSize="655,805" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="Instantiate the effor code list.  This errorCodes is akin to an in argument for a worrkflow." DisplayName="Multiple Assign Initialization" sap:VirtualizedContainerService.HintSize="479,190" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:String[]">
                  <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">errorCodes</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:String[]">
                  <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">new string[] {"Ax001", "Ax002", "Ax003", "Ax004", "Ax005", "Bx001", "Bx002", "Bx003", "Cx001", "Cx002", "Cx003", "Cx004", "Dx314", "BadError"}</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="In the Windows Legacy project, I put the error codes into a list as using arrays here is, in my understanding, a poor design choice.&#xA;&#xA;That said I wanted to stick to the specification in this case.  As such, I instantiated the arrays to the size of the argument array so that there should never be an out of bounds issue." DisplayName="Multiple Assign Error Code Arrays" sap:VirtualizedContainerService.HintSize="479,303" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:String[]">
                  <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">errorCodesAx</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:String[]">
                  <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">new string[errorCodes.Length]</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:String[]">
                  <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">errorCodesBx</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:String[]">
                  <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">new string[errorCodes.Length]</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:String[]">
                  <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">errorCodesCx</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:String[]">
                  <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">new string[errorCodes.Length]</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Iterate through the errorCodes array and put each error code into the appropriate array." DisplayName="Sequence Operation" sap:VirtualizedContainerService.HintSize="655,789" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Error Code" sap:VirtualizedContainerService.HintSize="593,630" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body Error Code" sap:VirtualizedContainerService.HintSize="559,443" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="errorCode" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap2010:Annotation.AnnotationText="Get the current error code by the first two characters." DisplayName="Assign Error Code Current" sap:VirtualizedContainerService.HintSize="497,153" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">errorCode</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">currentItem.Substring(0, 2).ToUpper()</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Switch x:TypeArguments="x:String" DisplayName="Switch Error Code" sap:VirtualizedContainerService.HintSize="497,205" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                <Switch.Default>
                  <ui:LogMessage DisplayName="Log Message RPADev-S02P03-Switch.Main.Switch.Default;" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">"RPADev-S02P03-Switch.Main.Switch.Default; An unhandled error code was encountered. Error Code: " + currentItem</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                </Switch.Default>
                <Switch.Expression>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">errorCode</CSharpValue>
                  </InArgument>
                </Switch.Expression>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="AX" DisplayName="Methods\\Add_ArrayItem.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Methods\\Add_ArrayItem.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StringItem">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">currentItem</CSharpValue>
                    </InArgument>
                    <InOutArgument x:TypeArguments="s:String[]" x:Key="io_ArrayString">
                      <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">errorCodesAx</CSharpReference>
                    </InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="BX" DisplayName="Methods\\Add_ArrayItem.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Methods\\Add_ArrayItem.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StringItem">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">currentItem</CSharpValue>
                    </InArgument>
                    <InOutArgument x:TypeArguments="s:String[]" x:Key="io_ArrayString">
                      <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">errorCodesBx</CSharpReference>
                    </InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="CX" DisplayName="Methods\\Add_ArrayItem.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Methods\\Add_ArrayItem.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StringItem">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">currentItem</CSharpValue>
                    </InArgument>
                    <InOutArgument x:TypeArguments="s:String[]" x:Key="io_ArrayString">
                      <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">errorCodesCx</CSharpReference>
                    </InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Switch>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <ui:ForEach.Values>
          <InArgument x:TypeArguments="sc:IEnumerable">
            <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">errorCodes</CSharpValue>
          </InArgument>
        </ui:ForEach.Values>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Sequence Result" sap:VirtualizedContainerService.HintSize="655,637" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message RPADev-S02P03-Switch.Main.ErrorCodes.Ax;" sap:VirtualizedContainerService.HintSize="388,181" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">"RPADev-S02P03-Switch.Main.ErrorCodes.Ax; " + Environment.NewLine + string.Join(Environment.NewLine, errorCodesAx)</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message RPADev-S02P03-Switch.Main.ErrorCodes.Bx;" sap:VirtualizedContainerService.HintSize="388,181" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">"RPADev-S02P03-Switch.Main.ErrorCodes.Bx; " + Environment.NewLine + string.Join(Environment.NewLine, errorCodesBx)</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message RPADev-S02P03-Switch.Main.ErrorCodes.Cx;" sap:VirtualizedContainerService.HintSize="388,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">"RPADev-S02P03-Switch.Main.ErrorCodes.Cx; " + Environment.NewLine + string.Join(Environment.NewLine, errorCodesCx)</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
  </Sequence>
</Activity>